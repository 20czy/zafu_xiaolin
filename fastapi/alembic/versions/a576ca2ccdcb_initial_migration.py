"""Initial migration

Revision ID: a576ca2ccdcb
Revises: 
Create Date: 2025-07-01 18:15:47.926624

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a576ca2ccdcb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_data',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_data_id'), 'agent_data', ['id'], unique=False)
    op.create_index(op.f('ix_agent_data_type'), 'agent_data', ['type'], unique=False)
    op.drop_table('django_migrations')
    op.drop_index('users_user_user_permissions_permission_id_0b93982e', table_name='users_user_user_permissions')
    op.drop_index('users_user_user_permissions_user_id_20aca447', table_name='users_user_user_permissions')
    op.drop_table('users_user_user_permissions')
    op.drop_index('academic_course_course_id_892399d2_like', table_name='academic_course')
    op.drop_table('academic_course')
    op.drop_table('django_content_type')
    op.drop_index('auth_group_name_a6ea08ec_like', table_name='auth_group')
    op.drop_table('auth_group')
    op.drop_index('django_session_expire_date_a5c62663', table_name='django_session')
    op.drop_index('django_session_session_key_c0390e0f_like', table_name='django_session')
    op.drop_table('django_session')
    op.drop_index('auth_permission_content_type_id_2f476e4b', table_name='auth_permission')
    op.drop_table('auth_permission')
    op.drop_index('django_admin_log_content_type_id_c4bce8eb', table_name='django_admin_log')
    op.drop_index('django_admin_log_user_id_c564eba6', table_name='django_admin_log')
    op.drop_table('django_admin_log')
    op.drop_index('users_user_groups_group_id_9afc8d0e', table_name='users_user_groups')
    op.drop_index('users_user_groups_user_id_5f6f5a90', table_name='users_user_groups')
    op.drop_table('users_user_groups')
    op.drop_index('academic_club_club_id_2d39ef8f_like', table_name='academic_club')
    op.drop_table('academic_club')
    op.drop_index('auth_group_permissions_group_id_b120cbf9', table_name='auth_group_permissions')
    op.drop_index('auth_group_permissions_permission_id_84c5c92e', table_name='auth_group_permissions')
    op.drop_table('auth_group_permissions')
    op.alter_column('chat_messages', 'id',
               existing_type=sa.BIGINT(),
               server_default=None,
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('chat_messages', 'content',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('chat_messages', 'is_user',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('chat_messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True)
    op.alter_column('chat_messages', 'session_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=True)
    op.drop_index('chatbot_chatmessage_session_id_42175ca2', table_name='chat_messages')
    op.create_index(op.f('ix_chat_messages_id'), 'chat_messages', ['id'], unique=False)
    op.drop_constraint('chatbot_chatmessage_session_id_42175ca2_fk', 'chat_messages', type_='foreignkey')
    op.create_foreign_key(None, 'chat_messages', 'chat_sessions', ['session_id'], ['id'])
    op.alter_column('chat_sessions', 'title',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
    op.alter_column('chat_sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True)
    op.alter_column('chat_sessions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True)
    op.alter_column('chat_sessions', 'user_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=True)
    op.drop_index('chatbot_chatsession_user_id_45735753', table_name='chat_sessions')
    op.create_index(op.f('ix_chat_sessions_id'), 'chat_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_chat_sessions_title'), 'chat_sessions', ['title'], unique=False)
    op.drop_constraint('chatbot_chatsession_user_id_45735753_fk_users_user_id', 'chat_sessions', type_='foreignkey')
    op.create_foreign_key(None, 'chat_sessions', 'users_user', ['user_id'], ['id'])
    op.add_column('process_infos', sa.Column('session_id', sa.String(), nullable=True))
    op.alter_column('process_infos', 'id',
               existing_type=sa.BIGINT(),
               server_default=None,
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('process_infos', 'steps',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               nullable=True)
    op.alter_column('process_infos', 'task_plan',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('process_infos', 'tool_selections',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('process_infos', 'task_results',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('process_infos', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True)
    op.alter_column('process_infos', 'message_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=True)
    op.drop_constraint('chatbot_processinfo_message_id_key', 'process_infos', type_='unique')
    op.create_index(op.f('ix_process_infos_id'), 'process_infos', ['id'], unique=False)
    op.drop_constraint('chatbot_processinfo_message_id_274f9d16_fk_chatbot_c', 'process_infos', type_='foreignkey')
    op.create_foreign_key(None, 'process_infos', 'chat_messages', ['message_id'], ['id'])
    op.create_foreign_key(None, 'process_infos', 'chat_sessions', ['session_id'], ['id'])
    op.alter_column('users_user', 'id',
               existing_type=sa.BIGINT(),
               server_default=None,
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('users_user', 'username',
               existing_type=sa.VARCHAR(length=150),
               nullable=True)
    op.alter_column('users_user', 'email',
               existing_type=sa.VARCHAR(length=254),
               nullable=True)
    op.alter_column('users_user', 'password',
               existing_type=sa.VARCHAR(length=128),
               nullable=True)
    op.alter_column('users_user', 'first_name',
               existing_type=sa.VARCHAR(length=150),
               nullable=True)
    op.alter_column('users_user', 'last_name',
               existing_type=sa.VARCHAR(length=150),
               nullable=True)
    op.alter_column('users_user', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users_user', 'is_staff',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users_user', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users_user', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True)
    op.alter_column('users_user', 'last_login',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('users_user', 'last_login_ip',
               existing_type=postgresql.INET(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_index('users_user_username_06e46fe6_like', table_name='users_user')
    op.drop_constraint('users_user_username_key', 'users_user', type_='unique')
    op.create_index(op.f('ix_users_user_email'), 'users_user', ['email'], unique=True)
    op.create_index(op.f('ix_users_user_id'), 'users_user', ['id'], unique=False)
    op.create_index(op.f('ix_users_user_username'), 'users_user', ['username'], unique=True)
    op.drop_column('users_user', 'date_joined')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users_user', sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_users_user_username'), table_name='users_user')
    op.drop_index(op.f('ix_users_user_id'), table_name='users_user')
    op.drop_index(op.f('ix_users_user_email'), table_name='users_user')
    op.create_unique_constraint('users_user_username_key', 'users_user', ['username'])
    op.create_index('users_user_username_06e46fe6_like', 'users_user', ['username'], unique=False)
    op.alter_column('users_user', 'last_login_ip',
               existing_type=sa.String(),
               type_=postgresql.INET(),
               existing_nullable=True)
    op.alter_column('users_user', 'last_login',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('users_user', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('users_user', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users_user', 'is_staff',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users_user', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users_user', 'last_name',
               existing_type=sa.VARCHAR(length=150),
               nullable=False)
    op.alter_column('users_user', 'first_name',
               existing_type=sa.VARCHAR(length=150),
               nullable=False)
    op.alter_column('users_user', 'password',
               existing_type=sa.VARCHAR(length=128),
               nullable=False)
    op.alter_column('users_user', 'email',
               existing_type=sa.VARCHAR(length=254),
               nullable=False)
    op.alter_column('users_user', 'username',
               existing_type=sa.VARCHAR(length=150),
               nullable=False)
    op.alter_column('users_user', 'id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'process_infos', type_='foreignkey')
    op.drop_constraint(None, 'process_infos', type_='foreignkey')
    op.create_foreign_key('chatbot_processinfo_message_id_274f9d16_fk_chatbot_c', 'process_infos', 'chat_messages', ['message_id'], ['id'], initially='DEFERRED', deferrable=True)
    op.drop_index(op.f('ix_process_infos_id'), table_name='process_infos')
    op.create_unique_constraint('chatbot_processinfo_message_id_key', 'process_infos', ['message_id'])
    op.alter_column('process_infos', 'message_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=False)
    op.alter_column('process_infos', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('process_infos', 'task_results',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('process_infos', 'tool_selections',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('process_infos', 'task_plan',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('process_infos', 'steps',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('process_infos', 'id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('process_infos', 'session_id')
    op.drop_constraint(None, 'chat_sessions', type_='foreignkey')
    op.create_foreign_key('chatbot_chatsession_user_id_45735753_fk_users_user_id', 'chat_sessions', 'users_user', ['user_id'], ['id'], initially='DEFERRED', deferrable=True)
    op.drop_index(op.f('ix_chat_sessions_title'), table_name='chat_sessions')
    op.drop_index(op.f('ix_chat_sessions_id'), table_name='chat_sessions')
    op.create_index('chatbot_chatsession_user_id_45735753', 'chat_sessions', ['user_id'], unique=False)
    op.alter_column('chat_sessions', 'user_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=False)
    op.alter_column('chat_sessions', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('chat_sessions', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('chat_sessions', 'title',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
    op.drop_constraint(None, 'chat_messages', type_='foreignkey')
    op.create_foreign_key('chatbot_chatmessage_session_id_42175ca2_fk', 'chat_messages', 'chat_sessions', ['session_id'], ['id'], initially='DEFERRED', deferrable=True)
    op.drop_index(op.f('ix_chat_messages_id'), table_name='chat_messages')
    op.create_index('chatbot_chatmessage_session_id_42175ca2', 'chat_messages', ['session_id'], unique=False)
    op.alter_column('chat_messages', 'session_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=False)
    op.alter_column('chat_messages', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('chat_messages', 'is_user',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('chat_messages', 'content',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('chat_messages', 'id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.create_table('auth_group_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='auth_group_permissions_group_id_b120cbf9_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='auth_group_permissio_permission_id_84c5c92e_fk_auth_perm', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_group_permissions_pkey'),
    sa.UniqueConstraint('group_id', 'permission_id', name='auth_group_permissions_group_id_permission_id_0cd325b0_uniq')
    )
    op.create_index('auth_group_permissions_permission_id_84c5c92e', 'auth_group_permissions', ['permission_id'], unique=False)
    op.create_index('auth_group_permissions_group_id_b120cbf9', 'auth_group_permissions', ['group_id'], unique=False)
    op.create_table('academic_club',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('club_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('club_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('president', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('contact_email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('member_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('founded_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='academic_club_pkey'),
    sa.UniqueConstraint('club_id', name='academic_club_club_id_key')
    )
    op.create_index('academic_club_club_id_2d39ef8f_like', 'academic_club', ['club_id'], unique=False)
    op.create_table('users_user_groups',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='users_user_groups_group_id_9afc8d0e_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users_user.id'], name='users_user_groups_user_id_5f6f5a90_fk_users_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='users_user_groups_pkey'),
    sa.UniqueConstraint('user_id', 'group_id', name='users_user_groups_user_id_group_id_b88eab82_uniq')
    )
    op.create_index('users_user_groups_user_id_5f6f5a90', 'users_user_groups', ['user_id'], unique=False)
    op.create_index('users_user_groups_group_id_9afc8d0e', 'users_user_groups', ['group_id'], unique=False)
    op.create_table('django_admin_log',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('action_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('object_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('object_repr', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('action_flag', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('change_message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.CheckConstraint('action_flag >= 0', name='django_admin_log_action_flag_check'),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='django_admin_log_content_type_id_c4bce8eb_fk_django_co', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users_user.id'], name='django_admin_log_user_id_c564eba6_fk_users_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='django_admin_log_pkey')
    )
    op.create_index('django_admin_log_user_id_c564eba6', 'django_admin_log', ['user_id'], unique=False)
    op.create_index('django_admin_log_content_type_id_c4bce8eb', 'django_admin_log', ['content_type_id'], unique=False)
    op.create_table('auth_permission',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('codename', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='auth_permission_content_type_id_2f476e4b_fk_django_co', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_permission_pkey'),
    sa.UniqueConstraint('content_type_id', 'codename', name='auth_permission_content_type_id_codename_01ab375a_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_index('auth_permission_content_type_id_2f476e4b', 'auth_permission', ['content_type_id'], unique=False)
    op.create_table('django_session',
    sa.Column('session_key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('session_data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expire_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('session_key', name='django_session_pkey')
    )
    op.create_index('django_session_session_key_c0390e0f_like', 'django_session', ['session_key'], unique=False)
    op.create_index('django_session_expire_date_a5c62663', 'django_session', ['expire_date'], unique=False)
    op.create_table('auth_group',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='auth_group_pkey'),
    sa.UniqueConstraint('name', name='auth_group_name_key')
    )
    op.create_index('auth_group_name_a6ea08ec_like', 'auth_group', ['name'], unique=False)
    op.create_table('django_content_type',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app_label', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_content_type_pkey'),
    sa.UniqueConstraint('app_label', 'model', name='django_content_type_app_label_model_76bd3d3b_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_table('academic_course',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('course_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('instructor', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('major', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('semester', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('day_of_week', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('classroom', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='academic_course_pkey'),
    sa.UniqueConstraint('course_id', name='academic_course_course_id_key')
    )
    op.create_index('academic_course_course_id_892399d2_like', 'academic_course', ['course_id'], unique=False)
    op.create_table('users_user_user_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='users_user_user_perm_permission_id_0b93982e_fk_auth_perm', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users_user.id'], name='users_user_user_permissions_user_id_20aca447_fk_users_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='users_user_user_permissions_pkey'),
    sa.UniqueConstraint('user_id', 'permission_id', name='users_user_user_permissions_user_id_permission_id_43338c45_uniq')
    )
    op.create_index('users_user_user_permissions_user_id_20aca447', 'users_user_user_permissions', ['user_id'], unique=False)
    op.create_index('users_user_user_permissions_permission_id_0b93982e', 'users_user_user_permissions', ['permission_id'], unique=False)
    op.create_table('django_migrations',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('applied', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_migrations_pkey')
    )
    op.drop_index(op.f('ix_agent_data_type'), table_name='agent_data')
    op.drop_index(op.f('ix_agent_data_id'), table_name='agent_data')
    op.drop_table('agent_data')
    # ### end Alembic commands ###
